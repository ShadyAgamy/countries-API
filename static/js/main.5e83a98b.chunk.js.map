{"version":3,"sources":["redux/actions/types.js","components/navbar/index.jsx","redux/actions/theme_switcher.js","components/selectBox/index.jsx","components/countryCard/index.jsx","apis/index.js","pages/HomePage/index.jsx","redux/actions/countries.js","pages/countryPage/index.jsx","App.js","redux/reducers/message.js","redux/reducers/countries.js","redux/reducers/themeSwitcher.js","redux/reducers/index.js","index.js"],"names":["SET_MESSAGE","CLEAR_MESSAGE","FETCH_ALL_COUNTRIES","FETCH_COUNTRY","SWITCH_THEME","NavBar","dispatch","useDispatch","darkTheme","useSelector","state","theme_switcher","darkMode","Navbar","className","Container","fluid","Brand","onClick","type","icon","faMoon","DropDownContainer","styled","DropDownHeader","DropDownListContainer","DropDownList","ListItem","options","Select","regionFilter","setRegionFilter","useState","isOpen","setIsOpen","inputEl","useRef","useEffect","handelWindowClick","e","current","contains","target","window","addEventListener","removeEventListener","ref","faAngleDown","map","option","value","Math","random","CountryCard","name","population","region","capital","flag","code","history","useHistory","Card","push","replaceAll","style","width","height","borderRadius","Img","variant","src","Body","Title","Text","millify","precision","axios","create","baseURL","HomePage","fetchedCountries","allCountries","all","nameSearchField","setNameSearchField","countiesToDisplay","setCountiesToDisplay","setAllCountries","api","get","then","response","payload","data","Promise","resolve","error","console","log","message","errors","toString","reject","splice","filter","country","common","toLowerCase","includes","Row","Col","md","InputGroup","Button","id","faMagnifyingGlass","FormControl","aria-label","aria-describedby","placeholder","onChange","span","offset","length","dataLength","next","concat","hasMore","flags","tld","xs","lg","marginBottom","png","CountryPage","nameParam","useParams","countryCode","a","subregion","borders","currencies","languages","faArrowLeft","alt","nativeName","Object","keys","official","key","i","border","Badge","App","data-theme","path","exact","component","initialState","messageReducer","action","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5e83a98b.chunk.js","sourcesContent":["export const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const FETCH_ALL_COUNTRIES = \"FETCH_ALL_COUNTRIES\";\r\n\r\nexport const FETCH_COUNTRY = \"FETCH_COUNTRY\";\r\n\r\nexport const SWITCH_THEME = \"SWITCH_THEME\";","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {swithTheme} from \"../../redux/actions/theme_switcher\";\r\nimport { Navbar, Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMoon } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./styles.scss\";\r\n\r\nfunction NavBar() {\r\n  const dispatch = useDispatch();\r\n  const darkTheme = useSelector((state) => state.theme_switcher.darkMode);\r\n \r\n  return (\r\n    <Navbar className=\"py-3 px-0\">\r\n      <Container fluid>\r\n        <Navbar.Brand>Where in the world?</Navbar.Brand>\r\n        <div className=\"darkMode d-flex align-items-center justify-content-center\" onClick={()=> dispatch(swithTheme())}>\r\n          <FontAwesomeIcon icon={faMoon} className=\"ml-auto\" />\r\n          <span>{darkTheme ? 'light mode' : 'dark mode'}</span>\r\n        </div>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { SWITCH_THEME } from \"./types\";\r\n\r\nexport const swithTheme = () => {\r\n    return {\r\n        type: SWITCH_THEME\r\n    }\r\n\r\n};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst DropDownContainer = styled(\"div\")`\r\n  width: 12.5em;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst DropDownHeader = styled(\"div\")`\r\n  margin-bottom: 0.3em;\r\n  padding: 1.1rem 1.3rem;\r\n  border-radius: 6px;\r\n  font-weight: 600;\r\n  font-size: 0.8rem;\r\n  color: var(--textColor);\r\n  background: var(--BackgroundElmns);\r\n  cursor: pointer;\r\n  display: flex;\r\n  text-transform: capitalize;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst DropDownListContainer = styled(\"div\")`\r\n  position: relative;\r\n  z-index: 9;\r\n`;\r\n\r\nconst DropDownList = styled(\"ul\")`\r\n  margin: 0;\r\n  background: var(--BackgroundElmns);\r\n  color: var(--textColor);\r\n  font-size: 0.8rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  padding: 1rem 1.3rem 0.2rem;\r\n  border-radius: 6px;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nconst ListItem = styled(\"li\")`\r\n  list-style: none;\r\n  margin-bottom: 0.8em;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst options = [\"All\",\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"oceania\", \"Antarctic\"];\r\nexport default function Select({regionFilter, setRegionFilter}) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  \r\n\r\n  const inputEl = useRef(null);\r\n\r\n  const toggling = () => setIsOpen(!isOpen);\r\n\r\n  const onOptionClicked = (value) =>  {\r\n    setRegionFilter(value);\r\n    if (value === \"All\") {\r\n      setRegionFilter(\"\");\r\n      return;\r\n    }\r\n   \r\n   \r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const handelWindowClick = (e) => {\r\n        if (!inputEl.current?.contains(e.target)) {\r\n          setIsOpen(false);\r\n        }\r\n    };\r\n    window.addEventListener(\"click\", handelWindowClick);\r\n    return () => {\r\n      window.removeEventListener(\"click\", handelWindowClick);\r\n    };\r\n  }, [inputEl]);\r\n\r\n  return (\r\n    <DropDownContainer ref={inputEl}>\r\n      <DropDownHeader className=\"main_shadow\" onClick={toggling}>\r\n        {regionFilter || \"Filter by Region\"}\r\n        <FontAwesomeIcon icon={faAngleDown} className=\"ml-auto\" />\r\n      </DropDownHeader>\r\n      {isOpen && (\r\n        <DropDownListContainer className=\"main_shadow\">\r\n          <DropDownList>\r\n            {options.map((option) => (\r\n              <ListItem onClick={() => onOptionClicked(option)} key={Math.random()}>\r\n                {option}\r\n              </ListItem>\r\n            ))}\r\n          </DropDownList>\r\n        </DropDownListContainer>\r\n      )}\r\n    </DropDownContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst CountryCard = ({ name, population, region, capital, flag, code }) => {\r\n  const history = useHistory();\r\n  const toCountryPage = () => {\r\n    history.push(`/countries/${code.replaceAll('.', '')}`);\r\n  };\r\n  return (\r\n    <Card\r\n      onClick={toCountryPage}\r\n      className=\"main_shadow\"\r\n      style={{ width: \"100%\", height: \"100%\", borderRadius: \"10px\" }}\r\n    >\r\n      <Card.Img variant=\"top\" src={flag} />\r\n      <Card.Body>\r\n        <Card.Title>{name}</Card.Title>\r\n        <Card.Text>region: {region}</Card.Text>\r\n        <Card.Text>\r\n          population:\r\n          {millify(population, {\r\n            precision: 3,\r\n          })}\r\n        </Card.Text>\r\n        <Card.Text>capital: {capital}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://restcountries.com/v3.1/\"\r\n})","import React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport NavBar from \"../../components/navbar\";\r\nimport Select from \"../../components/selectBox\";\r\nimport CountryCard from \"../../components/countryCard\";\r\n\r\nimport { Container, InputGroup, FormControl, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAllCountries } from \"../../redux/actions/countries\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst HomePage = () => {\r\n  const fetchedCountries = useSelector((state) => state.allCountries.all);\r\n  const [nameSearchField, setNameSearchField] = useState(\"\");\r\n  const [regionFilter, setRegionFilter] = useState(\"\");\r\n  const [countiesToDisplay, setCountiesToDisplay] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const [allCountries, setAllCountries] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    setAllCountries(fetchedCountries)\r\n  }, [fetchedCountries])\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCountries());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setCountiesToDisplay(allCountries.splice(0, 8));\r\n  }, [allCountries]);\r\n\r\n  const fetchMoreData = () => {\r\n    setCountiesToDisplay(countiesToDisplay.concat(allCountries.splice(0, 8)));\r\n  };\r\n\r\n  // filter fetched countries\r\n  useEffect(() => {\r\n      setAllCountries(\r\n        fetchedCountries.filter((country) => {\r\n          return (\r\n            country.name.common.toLowerCase().includes(nameSearchField.toLowerCase()) &&\r\n            country.region.toLowerCase().includes(regionFilter.toLowerCase())\r\n          );\r\n        })\r\n      );\r\n  }, [regionFilter, nameSearchField]);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"homepage\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col md={4}>\r\n              <InputGroup className=\"mb-3 searchBox\">\r\n                <Button id=\"button-addon1\">\r\n                  <FontAwesomeIcon icon={faMagnifyingGlass} />\r\n                </Button>\r\n                <FormControl\r\n                  aria-label=\"Example text with button addon\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  placeholder=\"Search for a country...\"\r\n                  onChange={(e) => setNameSearchField(e.target.value)}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col md={{ span: 2, offset: 6 }}>\r\n              <Select regionFilter={regionFilter} setRegionFilter={setRegionFilter} />\r\n            </Col>\r\n          </Row>\r\n          {countiesToDisplay.length > 0 ? (\r\n            <InfiniteScroll\r\n              dataLength={countiesToDisplay.length}\r\n              next={fetchMoreData}\r\n              hasMore={true}\r\n            >\r\n              <Row className=\"mt-4 pt-2 \">\r\n                {countiesToDisplay?.map((country) => {\r\n                  const { name, population, region, capital, flags, tld } = country;\r\n                  return (\r\n                    <Col xs lg=\"3\" style={{ marginBottom: \"5rem\" }} className=\"country_card\">\r\n                      <CountryCard\r\n                        name={name.common}\r\n                        population={population}\r\n                        region={region}\r\n                        capital={capital}\r\n                        flag={flags.png}\r\n                        code={tld ? tld[0] :\"we\"}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n              </Row>\r\n            </InfiniteScroll>\r\n          ) : (\r\n            <div className=\"d-flex justify-content-center mt-5 loadingMsg\">\r\n              <h3>No countries founded</h3>\r\n            </div>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import api from \"../../apis\";\r\n\r\nimport {\r\n    SET_MESSAGE,\r\n    FETCH_ALL_COUNTRIES,\r\n    FETCH_COUNTRY\r\n} from \"./types\";\r\n\r\n\r\nexport const getAllCountries = () => (dispatch) => {\r\n    return api.get(\"/all\")\r\n        .then(\r\n            (response) => {\r\n                dispatch({\r\n                    type: FETCH_ALL_COUNTRIES,\r\n                    payload: response.data,\r\n                });\r\n                return Promise.resolve();\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                const message =\r\n                    (error.response && error.response.data && error.response.data.errors) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: message,\r\n                });\r\n                return Promise.reject();\r\n            }\r\n        );\r\n};\r\n\r\nexport const getCountry = countryCode => async dispatch => {\r\n    try {\r\n        const response = await api.get(`/alpha/${countryCode}`)\r\n        dispatch({\r\n            type: FETCH_COUNTRY,\r\n            payload: response.data[0],\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            (error.response && error.response.data && error.response.data.errors) ||\r\n            error.message ||\r\n            error.toString();\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: message,\r\n        });\r\n        return Promise.reject();\r\n    }\r\n};","import React, { useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport NavBar from \"../../components/navbar\";\r\n\r\nimport { Container, Button, Row, Col, Badge } from \"react-bootstrap\";\r\n\r\nimport millify from \"millify\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { getCountry } from \"../../redux/actions/countries\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nfunction CountryPage() {\r\n  const history = useHistory();\r\n  const { nameParam } = useParams();\r\n  const dispatch = useDispatch();\r\n  const country = useSelector((state) => state.allCountries.country);\r\n  const goHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getCountry(nameParam));\r\n  }, [dispatch, nameParam]);\r\n\r\n  const { name, flags, population, region, subregion, capital, borders, currencies, languages, tld } =\r\n    country;\r\n    const code = tld? tld[0] : null;\r\n\r\n console.log(borders)\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Container fluid className=\"countryPage\">\r\n        <Button variant=\"light\" onClick={goHome}>\r\n          <FontAwesomeIcon icon={faArrowLeft} />\r\n          Back\r\n        </Button>\r\n        <Row className=\"align-items-center\">\r\n          <Col md={6}>\r\n            <img src={flags?.png} alt=\"country flag\" />\r\n          </Col>\r\n          <Col md={6} className=\"countryPage_info\">\r\n            <h3 className=\"h3 fw-bold \">{name?.common}</h3>\r\n            <Row className=\"  align-items-center\">\r\n              <Col className=\"me-5\">\r\n                <h5>\r\n                  Native name:\r\n                  <span>{name?.nativeName[Object.keys(name.nativeName)[0]].official}</span>\r\n                </h5>\r\n              </Col>\r\n              <Col>\r\n                <h5>\r\n                  top level domain: <span>{code}</span>\r\n                </h5>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"  align-items-center\">\r\n              <Col className=\"me-5\">\r\n                <h5>\r\n                  population:\r\n                  <span>\r\n                    {population\r\n                      ? millify(population, {\r\n                          precision: 3,\r\n                        })\r\n                      : 0}\r\n                  </span>\r\n                </h5>\r\n              </Col>\r\n              <Col>\r\n                <h5>\r\n                  currencies:\r\n                  <span>{currencies ? currencies[Object.keys(currencies)[0]].name : null}</span>\r\n                </h5>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"  align-items-center\">\r\n              <Col className=\"me-5\">\r\n                <h5>\r\n                  region:\r\n                  <span>{region}</span>\r\n                </h5>\r\n              </Col>\r\n              <Col>\r\n                <h5>\r\n                  languages:\r\n                  {languages\r\n                    ? Object.keys(languages).map((key, i) => (\r\n                        <span>\r\n                          {!(i === Object.keys(languages).length - 1)\r\n                            ? languages[key] + \",\"\r\n                            : languages[key]}\r\n                        </span>\r\n                      ))\r\n                    : null}\r\n                </h5>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"  align-items-center\">\r\n              <Col className=\"me-5\">\r\n                <h5>\r\n                subregion:\r\n                  <span>{subregion}</span>\r\n                </h5>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"  align-items-center\">\r\n              <Col >\r\n                <h5>\r\n                capital:\r\n                  <span>{capital?capital[0]: null}</span>\r\n                </h5>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\" borders\">\r\n              <Col className=\"d-flex align-items-center\">\r\n                <h5>borders countries:</h5>\r\n                <div className=\"d-flex align-items-center flex-wrap\">\r\n                 {borders?.map(border => <Badge className=\"main_shadow\" onClick={() => history.push(`/countries/${border}`)}>{border}</Badge>)}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CountryPage;\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage/index\";\r\nimport CountryPage from \"./pages/countryPage\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nimport \"./app.scss\";\r\n\r\nexport default function App() {\r\n  const darkTheme = useSelector((state) => state.theme_switcher.darkMode);\r\n  return (\r\n    <div className=\"app\" data-theme={darkTheme? \"dark\" : \"\"}>\r\n      <HashRouter >\r\n        <Switch>\r\n          <Route path=\"/\" exact component={HomePage}>\r\n          </Route>\r\n          <Route path=\"/countries/:nameParam\" exact component={CountryPage}></Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n    \r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default messageReducer;","import {\r\n    FETCH_ALL_COUNTRIES,\r\n    FETCH_COUNTRY\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    all: [],\r\n    country: {}\r\n};\r\n\r\nexport const allCountries = (state = initialState, action) => {\r\n    const {\r\n        type,\r\n        payload\r\n    } = action;\r\n\r\n    switch (type) {\r\n        case FETCH_ALL_COUNTRIES:\r\n            return {...initialState, all: payload };\r\n        case FETCH_COUNTRY:\r\n            return {...initialState, country: payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    SWITCH_THEME\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    darkMode: true\r\n};\r\n\r\nexport const theme_switcher = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_THEME:\r\n            return {\r\n                darkMode: !state.darkMode\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport messageReducer from \"./message\";\r\n\r\nimport { allCountries } from \"./countries\";\r\n\r\nimport { theme_switcher } from \"./themeSwitcher\";\r\n\r\nexport default combineReducers({\r\n    message: messageReducer,\r\n    allCountries,\r\n    theme_switcher\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport \"./index.scss\";\r\nimport reducers from \"./redux/reducers/index\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}